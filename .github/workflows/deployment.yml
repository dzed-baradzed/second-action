name: Test Project
on: 
  workflow_call:
    inputs:
      skip_tests:
        required: false
        type: boolean
        default: false
        description: 'Skip Tests'
    secrets:
      CHECKMARX_USERNAME:
        required: true
jobs:
  test:
    if: inputs.skip_tests != true
    runs-on: ubuntu-latest
    steps: 
      - name: Get code
        uses: actions/checkout@v3
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps: 
      - name: Get code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Github obj
        run: echo "${{ toJSON(github) }}"

      - name: Input node version
        run: echo "${{ inputs.node_version }}"

      - name: Secrets
        run: echo "${{ secrets.CHECKMARX_USERNAME }}"

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Misc
        run: echo "${{ steps.extract_branch.outputs.branch }}"

      - name: Get package info
        id: get-package-info
        uses: codex-team/action-nodejs-package-info@v1.1
        with:
          path: ./
      
      - name: Create tag
        working-directory: ./ 
        run: |
          git config user.name github-actions
          git config.email "github-actions@github-actions.com"
          git tag v${{steps.get-package-info.outputs.version}}
          git push origin v${{steps.get-package-info.outputs.version}}
          npm version minor -m "Bump to version %s"
          git push
          git tag

      # - name: Test logic
      #   env:
      #     BRANCH: ${{ steps.extract_branch.outputs.branch }}
      #   run: |
      #     echo $BRANCH
      #     if [ $BRANCH == 'master' ]; then
      #       echo "This is master branch"
      #     else
      #       echo "This is not master branch"
      #     fi
      
